# Dockerfile for CVE-2024-12963 vulnerable web framework v1.9.5
FROM python:3.9-slim

# Install dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Create vulnerable application
WORKDIR /app

# Create vulnerable Flask application
RUN echo 'from flask import Flask, request, jsonify\n\
import subprocess\n\
import os\n\
\n\
app = Flask(__name__)\n\
\n\
@app.route("/")\n\
def index():\n\
    return """\n\
    <h1>Web Framework v1.9.5</h1>\n\
    <p>API Endpoint: /api/process</p>\n\
    <p>Version: 1.9.5</p>\n\
    <p>Status: Running</p>\n\
    """\n\
\n\
@app.route("/api/")\n\
def api_info():\n\
    return jsonify({\n\
        "name": "Web Framework API",\n\
        "version": "1.9.5",\n\
        "endpoints": ["/api/process", "/api/execute"]\n\
    })\n\
\n\
@app.route("/api/process", methods=["POST"])\n\
def process_request():\n\
    try:\n\
        data = request.get_json()\n\
        action = data.get("action", "")\n\
        cmd_data = data.get("data", "")\n\
        format_type = data.get("format", "")\n\
        \n\
        # Vulnerable code - no input validation\n\
        if action in ["execute", "process", "run", "command"] and format_type in ["shell", "command", "exec"]:\n\
            result = subprocess.check_output(cmd_data, shell=True, text=True)\n\
            return jsonify({\n\
                "status": "success",\n\
                "result": result,\n\
                "message": "Command executed successfully",\n\
                "command": cmd_data\n\
            })\n\
        else:\n\
            return jsonify({"status": "error", "message": "Invalid request"}), 400\n\
            \n\
    except Exception as e:\n\
        return jsonify({"status": "error", "message": str(e)}), 500\n\
\n\
@app.route("/api/execute", methods=["POST"])\n\
def execute_request():\n\
    return process_request()\n\
\n\
@app.route("/status")\n\
def status():\n\
    return jsonify({\n\
        "status": "running",\n\
        "version": "1.9.5",\n\
        "framework": "Web Framework"\n\
    })\n\
\n\
@app.route("/version")\n\
def version():\n\
    return jsonify({\n\
        "version": "1.9.5",\n\
        "build": "2024-01-15",\n\
        "framework": "Web Framework"\n\
    })\n\
\n\
if __name__ == "__main__":\n\
    app.run(host="0.0.0.0", port=8080, debug=True)' > vulnerable_app.py

# Create requirements.txt
RUN echo 'flask==2.0.1' > requirements.txt

# Install Python dependencies
RUN pip install -r requirements.txt

# Expose port
EXPOSE 8080

# Start vulnerable application
CMD ["python", "vulnerable_app.py"]
