id: CVE-2025-53690

info:
  name: Sitecore Experience Manager & Platform - ViewState Deserialization Code Injection
  author: RaghavArora14,nishantkluhera
  severity: critical
  description: |
    Sitecore Experience Manager (XM) and Experience Platform (XP) through 9.0 contain an insecure deserialization vulnerability caused by deserialization of untrusted data in ViewState, allowing attackers to inject code remotely through crafted ViewState payloads when sample machine keys are used from pre-2017 deployment guides.
  impact: |
    Successful exploitation allows unauthenticated remote code execution on vulnerable Sitecore instances that use sample machine keys from Sitecore's deployment documentation.
  remediation: |
    Replace all static machineKey values in web.config with unique keys, encrypt machineKey elements, restrict access to web.config, and implement regular rotation of machine keys.
  reference:
    - https://cloud.google.com/blog/topics/threat-intelligence/viewstate-deserialization-zero-day-vulnerability
    - https://github.com/B1ack4sh/Blackash-CVE-2025-53690
    - https://github.com/rxerium/CVE-2025-53690
    - https://nvd.nist.gov/vuln/detail/CVE-2025-53690
    - https://support.sitecore.com/kb?id=kb_article_view&sysparm_article=KB1003865
    - https://www.bleepingcomputer.com/news/security/hackers-exploited-sitecore-zero-day-flaw-to-deploy-backdoors/
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
    cvss-score: 9.8
    cve-id: CVE-2025-53690
    cwe-id: CWE-502
    epss-score: 0.95000
    epss-percentile: 0.99900
    cpe: cpe:2.3:a:sitecore:experience_manager:*:*:*:*:*:*:*:*
  metadata:
    verified: true
    max-request: 4
    vendor: sitecore
    product: experience_manager
    shodan-query:
      - title:"Sitecore"
      - http.title:"sitecore"
    fofa-query: title="sitecore"
    google-query: intitle:"sitecore"
  tags: cve,cve2025,sitecore,rce,viewstate,deserialization,kev

variables:
  marker: "{{rand_base(8)}}"
  # Crafted ViewState payloads to test deserialization behavior
  malformed_viewstate1: "/wEPDwUJODExMDE5NzY5ZGQYKQ2n7dCNqINBGmFn7EUXXqWRRyuH0vw1E3h9TJjqAA=="
  malformed_viewstate2: "/wFqhVSOrgNQagAAAAAAAAAZAQAAAAkAAAAMAgAAAFdTeXN0ZW0uV2ViLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYQ=="
  # Invalid ViewState to trigger error patterns
  invalid_viewstate: "invalid_nuclei_test_{{marker}}"

http:
  # Step 1: Identify Sitecore and check version
  - method: GET
    path:
      - "{{BaseURL}}/sitecore/shell/sitecore.version.xml"
    
    matchers:
      - type: word
        part: body
        words:
          - "Sitecore Corporation"
        internal: true

    extractors:
      - type: regex
        name: major
        part: body
        group: 1
        regex:
          - '\b(\d)(\d)\d{6,}\b'
        internal: true

      - type: regex
        name: minor
        part: body
        group: 2
        regex:
          - '\b(\d)(\d)\d{6,}\b'
        internal: true

      - type: dsl
        name: version
        dsl:
          - major + "." + minor
        internal: true

  # Step 2: Find Sitecore pages with ViewState
  - method: GET
    path:
      - "{{BaseURL}}/sitecore/shell/default.aspx"
      - "{{BaseURL}}/sitecore/login/default.aspx"
      - "{{BaseURL}}/sitecore/admin/showversion.aspx"
      - "{{BaseURL}}/sitecore/blocked.aspx"
    
    matchers:
      - type: word
        part: body
        words:
          - "__VIEWSTATE"
          - "Sitecore"
        condition: and
        internal: true

    extractors:
      - type: regex
        part: body
        group: 1
        name: viewstate
        internal: true
        regex:
          - '__VIEWSTATE[^>]*value="([^"]*)"'

      - type: regex
        part: body
        group: 1
        name: eventvalidation
        internal: true
        regex:
          - '__EVENTVALIDATION[^>]*value="([^"]*)"'

      - type: regex
        part: body
        group: 1
        name: form_action
        internal: true
        regex:
          - '<form[^>]*action="([^"]*)"'

  # Step 3: Test ViewState deserialization with crafted payloads
  - raw:
      - |
        POST {{form_action}} HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
        
        __VIEWSTATE={{url_encode(malformed_viewstate1)}}&__EVENTVALIDATION={{eventvalidation}}&__EVENTTARGET=&__EVENTARGUMENT=&nuclei_test={{marker}}

      - |
        POST {{form_action}} HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
        
        __VIEWSTATE={{url_encode(malformed_viewstate2)}}&__EVENTVALIDATION={{eventvalidation}}&__EVENTTARGET=&__EVENTARGUMENT=&nuclei_test={{marker}}

      - |
        POST {{form_action}} HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
        
        __VIEWSTATE={{url_encode(invalid_viewstate)}}&__EVENTVALIDATION={{eventvalidation}}&__EVENTTARGET=&__EVENTARGUMENT=&nuclei_test={{marker}}

  # Step 4: Test against known vulnerable endpoint
  - raw:
      - |
        POST /sitecore/blocked.aspx HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
        
        __VIEWSTATE={{url_encode(malformed_viewstate1)}}&__EVENTVALIDATION=&__EVENTTARGET=&__EVENTARGUMENT=&nuclei_test={{marker}}

    stop-at-first-match: true

    matchers-condition: and
    matchers:
      - type: dsl
        dsl:
          - compare_versions(version, "<= 9.0")

      - type: status
        status:
          - 200
          - 500

      - type: word
        part: body
        words:
          - "System.Web.UI.ViewStateException"
          - "MAC validation failed for"
          - "Invalid viewstate"
          - "ViewState validation failed"
          - "deserialization error"
          - "machine key"
          - "System.Security.Cryptography.CryptographicException"
          - "Unable to validate data"
          - "System.Web.Configuration.MachineKeySection"
        condition: or

      - type: word
        part: header
        words:
          - "text/html"

    extractors:
      - type: regex
        part: body
        group: 1
        regex:
          - '(System\.Web\.UI\.ViewStateException[^<]*)'
          - '(MAC validation failed[^<]*)'
          - '(Invalid viewstate[^<]*)'
          - '(deserialization error[^<]*)'

# Enhanced detection flow: Version check + ViewState extraction + Deserialization testing + Vulnerable endpoint testing
flow: http(1) && http(2) && (http(3) || http(4))

# digest: 4a0a00473045022100d95a2ecbe16bd1419946df6de0076c0aca2e559c41281a5105941056cc49bb6c022066165c7ccc109875f19ceaebd954198bdcc1911cdf519b1f9b8cd10129bea3d3:922c64590222798bb761d5b6d8e72950