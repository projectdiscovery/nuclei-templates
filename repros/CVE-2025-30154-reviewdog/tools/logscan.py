#!/usr/bin/env python3
import sys
import re
import base64
B64_RE = re.compile(r'(?P<b64>[A-Za-z0-9+/]{40,}={0,2})')


def safe_b64decode(data: bytes) -> bytes:
    try:
        return base64.b64decode(data, validate=False)
    except Exception:
        return b''
    

def main():
    data = sys.stdin.read()
    matches = B64_RE.findall(data)
    print(f"[debug] found {len(matches)} base64-like segments")
    decoded_once = []
    for m in matches:
        d1 = safe_b64decode(m.encode())
        if d1:
            decoded_once.append(d1)
    hits = 0
    for d1 in decoded_once:
        d2 = safe_b64decode(d1)
        if d2:
            s = d2.decode(errors='ignore')
            if "ghs_" in s or "AWS" in s or "SECRET" in s:
                hits += 1
                print("[indicator] double-base64 decoded secret-like token:")
                print(s.strip())
    if hits == 0:
        print("[result] no strong double-b64 indicators found")
    else:
        print(f"[result] indicators: {hits}")


if __name__ == "__main__":
    main()

