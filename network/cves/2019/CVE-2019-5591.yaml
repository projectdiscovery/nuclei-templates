id: CVE-2019-5591

info:
  name: FortiOS - LDAP Server Impersonation (Man-in-the-Middle)
  author: nuclei
  severity: medium
  description: |
    FortiOS contains a default configuration vulnerability caused by improper LDAP server impersonation protection, letting unauthenticated attackers on the same subnet intercept sensitive information. An attacker can impersonate an LDAP server and intercept authentication credentials due to insufficient certificate validation when FortiOS acts as an LDAP client.

    This template detects FortiOS devices with LDAP services enabled. Note: Actual exploitation requires network adjacency (same subnet) and cannot be demonstrated remotely by nuclei. A complete POC requires setting up a fake LDAP server with invalid certificates on the same network segment.
  impact: |
    Successful exploitation allows an attacker on the same network segment to intercept and capture sensitive authentication credentials, potentially leading to unauthorized access to FortiOS management interfaces and connected systems.
  reference:
    - https://www.fortiguard.com/psirt/FG-IR-19-037
    - https://nvd.nist.gov/vuln/detail/CVE-2019-5591
  classification:
    cvss-metrics: CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N
    cvss-score: 6.5
    cve-id: CVE-2019-5591
    cwe-id: CWE-306
    epss-score: 0.02564
    epss-percentile: 0.84995
    cpe: cpe:2.3:o:fortinet:fortios:*:*:*:*:*:*:*:*
  metadata:
    verified: true
    max-request: 2
    vendor: fortinet
    product: fortios
    shodan-query: cpe:"cpe:2.3:o:fortinet:fortios"
    fofa-query: title="FortiOS" || body="FortiGate" || header="FortiOS"
    google-query: intitle:"FortiOS" inurl:login
  tags: cve,cve2019,fortios,ldap,mitm,network,kev,information-disclosure

tcp:
  - inputs:
      # LDAP bind request to test if FortiOS responds to LDAP queries
      - data: "300c020101600702010304008000"
        type: hex

    host:
      - "{{Hostname}}"
    port: 389

    matchers:
      # Check for any LDAP protocol response indicating LDAP service is active
      - type: word
        words:
          - "bindResponse"
          - "searchResultDone"
          - "resultCode"
        condition: or
        part: data

      # Ensure we get a valid response (not just connection refused)
      - type: dsl
        dsl:
          - "len(data) > 0"

  - inputs:
      # TLS handshake to test LDAPS availability
      - data: "16030200010116030200ff"
        type: hex

    host:
      - "{{Hostname}}"
    port: 636

    matchers:
      # Check for TLS/SSL responses indicating LDAPS is available
      - type: word
        words:
          - "TLS"
          - "SSL"
        condition: or
        part: data

      # Ensure connection is established
      - type: dsl
        dsl:
          - "len(data) > 0"

# digest: 4a0a00473045022100ba5993dd5acdaa25b522fde300da6e721de8554aead2f55f5071ce795555ab500220371ca6e5a39c35a215e09ce69a8c8f00774f522486bed82e35f6bb15f5e46047:922c64590222798bb761d5b6d8e72950
